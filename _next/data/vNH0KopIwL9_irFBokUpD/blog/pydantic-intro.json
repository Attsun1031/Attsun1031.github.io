{"pageProps":{"post":{"mdxSource":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"about\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#about\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"About\"), mdx(\"p\", null, \"pydantic \\u5358\\u4F53\\u3067\\u3082\\u5229\\u7528\\u53EF\\u80FD\\u306A\\u4FBF\\u5229\\u306A\\u6A5F\\u80FD\\u306B\\u3064\\u3044\\u3066\\u3054\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\"), mdx(\"h1\", {\n    \"id\": \"pydantic-とは\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#pydantic-%E3%81%A8%E3%81%AF\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"pydantic \\u3068\\u306F\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pydantic-docs.helpmanual.io/\"\n  }), \"\\u516C\\u5F0F\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\"), \" \\u306E\\u5192\\u982D\\u306B\\u306F\\u4EE5\\u4E0B\\u306E\\u3088\\u3046\\u306A\\u8A18\\u8F09\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Data validation and settings management using python type annotations.\")), mdx(\"p\", null, \"python \\u306E\\u578B\\u30A2\\u30CE\\u30C6\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u4F7F\\u3063\\u305F\\u3001\\u30C7\\u30FC\\u30BF\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\\u3068\\u8A2D\\u5B9A\\u7BA1\\u7406\\u306E\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3001\\u3067\\u3059\\u306D\\u3002\"), mdx(\"h2\", {\n    \"id\": \"基本的な使い方\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u57FA\\u672C\\u7684\\u306A\\u4F7F\\u3044\\u65B9\"), mdx(\"p\", null, \"\\u3053\\u306E\\u3042\\u3068\\u306E\\u8A71\\u3092\\u7406\\u89E3\\u3059\\u308B\\u306E\\u306B\\u5FC5\\u8981\\u306A\\u3001\\u57FA\\u672C\\u3068\\u306A\\u308B\\u6A5F\\u80FD\\u3092\\u3055\\u3089\\u3063\\u3068\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\"), mdx(\"h3\", {\n    \"id\": \"モデルの定義\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AE%E5%AE%9A%E7%BE%A9\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u30E2\\u30C7\\u30EB\\u306E\\u5B9A\\u7FA9\"), mdx(\"p\", null, \"pydantic \\u3067\\u306F\\u3001\\u30AF\\u30E9\\u30B9\\u3092\\u4F7F\\u3063\\u3066\\u30E2\\u30C7\\u30EB\\u3092\\u5B9A\\u7FA9\\u3057\\u307E\\u3059\\u3002\\n\\u5404\\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\\u306B\\u306F\\u578B\\u304C\\u5FC5\\u8981\\u3067\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"from\"), \" datetime \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"import\"), \" datetime\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"from\"), \" typing \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"import\"), \" Optional\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"from\"), \" pydantic \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"import\"), \" BaseModel\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" Field\\n\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"Order\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"BaseModel\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n    name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"str\"), \"\\n    created_at\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" datetime\\n    price\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"float\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Field\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" gt\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n    note\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" Optional\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"str\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-red\"\n  }), \"None\"), \"\\n\")), mdx(\"h3\", {\n    \"id\": \"インスタンス化とバリデーション\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E5%8C%96%E3%81%A8%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u30A4\\u30F3\\u30B9\\u30BF\\u30F3\\u30B9\\u5316\\u3068\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\"), mdx(\"p\", null, \"dict \\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u304B\\u3089\\u3001\\u30E2\\u30C7\\u30EB\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u751F\\u6210\\u3057\\u307E\\u3059\\u3002\\u751F\\u6210\\u6642\\u306B\\u3001\\u30E2\\u30C7\\u30EB\\u5B9A\\u7FA9\\u306B\\u5F93\\u3063\\u305F\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\\u304C\\u884C\\u308F\\u308C\\u307E\\u3059\\u3002\\n\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\\u306B\\u9055\\u53CD\\u3057\\u305F\\u5834\\u5408\\u3001\\u4F8B\\u5916\\u3068\\u306A\\u308A\\u307E\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# OK\"), \"\\no1 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Order\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"parse_obj\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"name\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"order1\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"created_at\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" datetime\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"now\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"price\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"100.1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# NG (created_at\\u304C\\u306A\\u3044)\"), \"\\no2 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Order\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"parse_obj\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"name\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"order2\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"price\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"100.1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# NG (price\\u304C0\\u672A\\u6E80)\"), \"\\no3 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Order\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"parse_obj\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"name\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"order3\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"created_at\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" datetime\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"now\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"price\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"-\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\")), mdx(\"h3\", {\n    \"id\": \"pydantic-と-fastapi\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#pydantic-%E3%81%A8-fastapi\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"pydantic \\u3068 FastAPI\"), mdx(\"p\", null, \"FastAPI \\u306E\\u30E6\\u30FC\\u30B6\\u30FC\\u3067\\u3042\\u308C\\u3070\\u3001\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://fastapi.tiangolo.com/tutorial/body/#import-pydantics-basemodel\"\n  }), \"\\u30B3\\u30C1\\u30E9\"), \" \\u306B\\u3042\\u308B\\u3088\\u3046\\u306B\\u3001\\u30EA\\u30AF\\u30A8\\u30B9\\u30C8\\u30DC\\u30C7\\u30A3\\u3092\\u5B9A\\u7FA9\\u3059\\u308B\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3068\\u3057\\u3066\\u99B4\\u67D3\\u307F\\u304C\\u3042\\u308B\\u3067\\u3057\\u3087\\u3046\\u3002\"), mdx(\"p\", null, \"\\u305F\\u3060\\u3001\\u5B9F\\u969B\\u306F FastAPI \\u5C02\\u7528\\u306E\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3068\\u3044\\u3046\\u308F\\u3051\\u3067\\u306F\\u306A\\u304F\\u3001pydantic \\u5358\\u4F53\\u3067\\u306E\\u5229\\u7528\\u3067\\u3082\\u975E\\u5E38\\u306B\\u4FBF\\u5229\\u306A\\u306E\\u3067\\u3059\\u3002\\n\\u4EE5\\u4E0B\\u3067\\u306F\\u3001\\u5358\\u4F53\\u3068\\u3057\\u3066\\u3069\\u306E\\u3088\\u3046\\u306A\\u5229\\u7528\\u304C\\u3042\\u308B\\u304B\\u3092\\u3054\\u7D39\\u4ECB\\u3057\\u307E\\u3059\\u3002\"), mdx(\"h1\", {\n    \"id\": \"pydantic-単体での具体的なユースケース\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#pydantic-%E5%8D%98%E4%BD%93%E3%81%A7%E3%81%AE%E5%85%B7%E4%BD%93%E7%9A%84%E3%81%AA%E3%83%A6%E3%83%BC%E3%82%B9%E3%82%B1%E3%83%BC%E3%82%B9\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"pydantic \\u5358\\u4F53\\u3067\\u306E\\u5177\\u4F53\\u7684\\u306A\\u30E6\\u30FC\\u30B9\\u30B1\\u30FC\\u30B9\"), mdx(\"h2\", {\n    \"id\": \"case-1-json-等で記述されたファイルを型安全に読み書きする\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#case-1-json-%E7%AD%89%E3%81%A7%E8%A8%98%E8%BF%B0%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%9E%8B%E5%AE%89%E5%85%A8%E3%81%AB%E8%AA%AD%E3%81%BF%E6%9B%B8%E3%81%8D%E3%81%99%E3%82%8B\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Case 1: json \\u7B49\\u3067\\u8A18\\u8FF0\\u3055\\u308C\\u305F\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u578B\\u5B89\\u5168\\u306B\\u8AAD\\u307F\\u66F8\\u304D\\u3059\\u308B\"), mdx(\"p\", null, \"\\u30B7\\u30F3\\u30D7\\u30EB\\u306A\\u30E6\\u30FC\\u30B9\\u30B1\\u30FC\\u30B9\\u3068\\u3057\\u3066\\u3001\\u5916\\u90E8\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u5165\\u51FA\\u529B\\u3092\\u578B\\u5B89\\u5168\\u306B\\u884C\\u3046\\u3068\\u3044\\u3046\\u3082\\u306E\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\"), mdx(\"p\", null, \"\\u4F8B\\u3048\\u3070\\u3001\\u5148\\u7A0B\\u5B9A\\u7FA9\\u3057\\u305F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Order\"), \" \\u30E2\\u30C7\\u30EB\\u3092 json \\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u6271\\u3046\\u3068\\u3057\\u307E\\u3057\\u3087\\u3046\\u3002\"), mdx(\"h3\", {\n    \"id\": \"json-ファイルを読み取り、モデルオブジェクトを生成\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#json-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8A%E3%80%81%E3%83%A2%E3%83%87%E3%83%AB%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E7%94%9F%E6%88%90\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"json \\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u8AAD\\u307F\\u53D6\\u308A\\u3001\\u30E2\\u30C7\\u30EB\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u751F\\u6210\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"from\"), \" pathlib \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"import\"), \" Path\\n\\nfpath \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\\nmodel \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Order\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"parse_file\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"fpath\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object.parse_file\"), \" \\u3067\\u3001json \\u306E\\u4E2D\\u8EAB\\u304C\\u30B9\\u30AD\\u30FC\\u30DE\\u3068\\u305A\\u308C\\u3066\\u3044\\u308C\\u3070\\u3001\\u4F8B\\u5916\\u3068\\u306A\\u308A\\u307E\\u3059\\u3002\"), mdx(\"h3\", {\n    \"id\": \"モデルオブジェクトを-json-ファイルへ書き込み\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E3%83%A2%E3%83%87%E3%83%AB%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92-json-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%B8%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u30E2\\u30C7\\u30EB\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3092 json \\u30D5\\u30A1\\u30A4\\u30EB\\u3078\\u66F8\\u304D\\u8FBC\\u307F\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"from\"), \" pathlib \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"import\"), \" Path\\n\\nfpath \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\\nmodel\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" Order \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"\\nfpath\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"write_text\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"model\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"json\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\")), mdx(\"p\", null, \"\\u30B7\\u30F3\\u30D7\\u30EB\\u3067\\u3059\\u306D\\uFF01 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"datetime\"), \" \\u578B\\u306E\\u3088\\u3046\\u306A\\u3001encoder \\u306E\\u8A2D\\u5B9A\\u7121\\u3057\\u306B\\u306F\\u6271\\u3048\\u306A\\u3044\\u578B\\u3082\\u3088\\u3057\\u306A\\u306B\\u5909\\u63DB\\u3057\\u3066\\u304F\\u308C\\u307E\\u3059\\u3002(ISO \\u30D5\\u30A9\\u30FC\\u30DE\\u30C3\\u30C8\\u304C\\u5229\\u7528\\u3055\\u308C\\u307E\\u3059)\"), mdx(\"h2\", {\n    \"id\": \"case-2-環境変数を混じえた、アプリケーション設定の読み込み\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#case-2-%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%82%92%E6%B7%B7%E3%81%98%E3%81%88%E3%81%9F%E3%80%81%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%A8%AD%E5%AE%9A%E3%81%AE%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Case 2: \\u74B0\\u5883\\u5909\\u6570\\u3092\\u6DF7\\u3058\\u3048\\u305F\\u3001\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u8A2D\\u5B9A\\u306E\\u8AAD\\u307F\\u8FBC\\u307F\"), mdx(\"p\", null, \"\\u5165\\u529B\\u30BD\\u30FC\\u30B9\\u304C\\u8907\\u6570\\u3042\\u308B\\u74B0\\u5883\\u8A2D\\u5B9A\\u306E\\u8AAD\\u307F\\u8FBC\\u307F\\u306B\\u3082\\u5229\\u7528\\u3067\\u304D\\u307E\\u3059\\u3002\"), mdx(\"p\", null, \"\\u516C\\u5F0F\\u306E\\u30AC\\u30A4\\u30C9\\u306F\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pydantic-docs.helpmanual.io/usage/settings/\"\n  }), \"\\u30B3\\u30C1\\u30E9\"), \"\\u3002\"), mdx(\"h3\", {\n    \"id\": \"設定の定義\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E8%A8%AD%E5%AE%9A%E3%81%AE%E5%AE%9A%E7%BE%A9\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u8A2D\\u5B9A\\u306E\\u5B9A\\u7FA9\"), mdx(\"p\", null, \"\\u901A\\u5E38\\u306E\\u30E2\\u30C7\\u30EB\\u3068\\u7570\\u306A\\u308A\\u3001 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BaseSettings\"), \" \\u30AF\\u30E9\\u30B9\\u3092\\u5229\\u7528\\u3057\\u307E\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"from\"), \" pydantic \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"import\"), \" BaseSettings\\n\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"AppSettings\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"BaseSettings\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n    api_key\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"str\"), \"\\n    debug_mode\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"bool\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-red\"\n  }), \"False\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"Config\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n        env_prefix \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"'my_app_'\"), \"\\n\")), mdx(\"h3\", {\n    \"id\": \"環境変数・引数からの読み取り\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%83%BB%E5%BC%95%E6%95%B0%E3%81%8B%E3%82%89%E3%81%AE%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8A\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u74B0\\u5883\\u5909\\u6570\\u30FB\\u5F15\\u6570\\u304B\\u3089\\u306E\\u8AAD\\u307F\\u53D6\\u308A\"), mdx(\"p\", null, \"\\u4F8B\\u3048\\u3070\\u3001 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MY_APP_API_KEY\"), \" \\u306E\\u3088\\u3046\\u306A\\u74B0\\u5883\\u5909\\u6570\\u304C\\u5B9A\\u7FA9\\u3055\\u308C\\u3066\\u3044\\u308B\\u5834\\u5408\\u3001 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"api_key\"), \" \\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\\u306B\\u5165\\u308B\\u5024\\u306F\\u305D\\u306E\\u74B0\\u5883\\u5909\\u6570\\u304B\\u3089\\u8AAD\\u307F\\u53D6\\u308A\\u307E\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# api_key \\u306F\\u5FC5\\u9808\\u3060\\u304C\\u3001\\u74B0\\u5883\\u5909\\u6570\\u5B9A\\u7FA9\\u304C\\u3042\\u308B\\u305F\\u3081\\u30A4\\u30F3\\u30B9\\u30BF\\u30F3\\u30B9\\u5316\\u53EF\\u80FD\"), \"\\ns \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" AppSettings\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\")), mdx(\"p\", null, \"\\u4E00\\u65B9\\u3001\\u5F15\\u6570\\u3068\\u3057\\u3066\\u3082\\u4E0E\\u3048\\u3089\\u308C\\u305F\\u5834\\u5408\\u3001\\u5F15\\u6570\\u304C\\u512A\\u5148\\u3055\\u308C\\u307E\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# \\u74B0\\u5883\\u5909\\u6570 MY_APP_API_KEY \\u306E\\u5024\\u306F\\u7121\\u8996\\u3055\\u308C\\u3001api_key\\u306F\\\"aaa\\\"\\u3068\\u306A\\u308B\"), \"\\ns \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" AppSettings\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"api_key\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"aaa\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\")), mdx(\"p\", null, \"\\u305D\\u306E\\u4ED6\\u3001dotenv \\u3084 Secret \\u304B\\u3089\\u306E\\u8AAD\\u307F\\u53D6\\u308A\\u306B\\u3082\\u5BFE\\u5FDC\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\\u5B8C\\u5168\\u306A\\u512A\\u5148\\u9806\\u5E8F\\u306F\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pydantic-docs.helpmanual.io/usage/settings/#field-value-priority\"\n  }), \"\\u30B3\\u30C1\\u30E9\"), \"\\u3002\\u9806\\u5E8F\\u306E\\u30AB\\u30B9\\u30BF\\u30DE\\u30A4\\u30BA\\u3082\\u53EF\\u80FD\\u3067\\u3059\\u3002\"), mdx(\"h2\", {\n    \"id\": \"case-3-google-spreadsheet-に入力された日本語ヘッダー付きシートの読み取り\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#case-3-google-spreadsheet-%E3%81%AB%E5%85%A5%E5%8A%9B%E3%81%95%E3%82%8C%E3%81%9F%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E4%BB%98%E3%81%8D%E3%82%B7%E3%83%BC%E3%83%88%E3%81%AE%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8A\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Case 3: Google Spreadsheet \\u306B\\u5165\\u529B\\u3055\\u308C\\u305F\\u65E5\\u672C\\u8A9E\\u30D8\\u30C3\\u30C0\\u30FC\\u4ED8\\u304D\\u30B7\\u30FC\\u30C8\\u306E\\u8AAD\\u307F\\u53D6\\u308A\"), mdx(\"p\", null, \"\\u5FDC\\u7528\\u3068\\u3057\\u3066\\u3001\\u3053\\u306E\\u3088\\u3046\\u306A\\u30B1\\u30FC\\u30B9\\u3092\\u8003\\u3048\\u3066\\u307F\\u307E\\u3057\\u3087\\u3046\\u3002\"), mdx(\"h3\", {\n    \"id\": \"このユースケースについて\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E3%81%93%E3%81%AE%E3%83%A6%E3%83%BC%E3%82%B9%E3%82%B1%E3%83%BC%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u3053\\u306E\\u30E6\\u30FC\\u30B9\\u30B1\\u30FC\\u30B9\\u306B\\u3064\\u3044\\u3066\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u30B9\\u30D7\\u30EC\\u30C3\\u30C9\\u30B7\\u30FC\\u30C8\\u306B\\u66F8\\u304D\\u8FBC\\u307E\\u308C\\u305F\\u60C5\\u5831\\u3092\\u3001Python \\u30D7\\u30ED\\u30B0\\u30E9\\u30E0\\u304B\\u3089\\u8AAD\\u307F\\u53D6\\u308A\\u305F\\u3044\\u3002\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u30C7\\u30FC\\u30BF\\u304C\\u3053\\u3061\\u3089\\u306E\\u60F3\\u5B9A\\u901A\\u308A\\u306B\\u5165\\u529B\\u3055\\u308C\\u3066\\u3044\\u308B\\u304B\\u30C1\\u30A7\\u30C3\\u30AF\\u3092\\u3057\\u305F\\u3044\\u3002\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u30B9\\u30D7\\u30EC\\u30C3\\u30C9\\u30B7\\u30FC\\u30C8\\u306E\\u5148\\u982D\\u306B\\u306F\\u65E5\\u672C\\u8A9E\\u306E\\u30AB\\u30E9\\u30E0\\u540D\\u3092\\u5165\\u529B\\u3057\\u305F\\u3044\\u3002\")), mdx(\"p\", null, \"\\u30A4\\u30E1\\u30FC\\u30B8\\u3068\\u3057\\u3066\\u306F\\u3001\\u4EE5\\u4E0B\\u306E\\u3088\\u3046\\u306A\\u30B9\\u30D7\\u30EC\\u30C3\\u30C9\\u30B7\\u30FC\\u30C8\\u3068\\u306A\\u308A\\u307E\\u3059\\u3002\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\u5165\\u529B\\u65E5\\uFF08YYYY-MM-DD\\uFF09\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\u56FD\\u30B3\\u30FC\\u30C9\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\u6700\\u4F4E\\u6C17\\u6E29\\uFF08\\u6442\\u6C0F\\uFF09\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\u6700\\u9AD8\\u6C17\\u6E29\\uFF08\\u6442\\u6C0F\\uFF09\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"2021-08-31\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"JP\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"25\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"35\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"2021-09-01\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"JP\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"23\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"31\")))), mdx(\"p\", null, \"\\u3053\\u306E\\u30C7\\u30FC\\u30BF\\u306B\\u306F\\u3001\\u4EE5\\u4E0B\\u306E\\u5165\\u529B\\u30EB\\u30FC\\u30EB\\u304C\\u5B58\\u5728\\u3057\\u307E\\u3059\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5165\\u529B\\u65E5\\u306F \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"YYYY-MM-DD\"), \" \\u5F62\\u5F0F\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u56FD\\u30B3\\u30FC\\u30C9\\u306F\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://ja.wikipedia.org/wiki/ISO_3166-1\"\n  }), \"ISO-3166-1 alpha2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u6700\\u4F4E\\u6C17\\u6E29 <= \\u6700\\u9AD8\\u6C17\\u6E29\")), mdx(\"h3\", {\n    \"id\": \"pydantic-を使った実装\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#pydantic-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E5%AE%9F%E8%A3%85\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"pydantic \\u3092\\u4F7F\\u3063\\u305F\\u5B9F\\u88C5\"), mdx(\"p\", null, \"\\u3053\\u306E\\u30C7\\u30FC\\u30BF\\u3092\\u6B63\\u3057\\u304F\\u304B\\u3064\\u52B9\\u7387\\u7684\\u306B\\u53D6\\u308A\\u6271\\u3046\\u306B\\u306F\\u3001\\u4EE5\\u4E0B\\u306E\\u3088\\u3046\\u306A\\u30E2\\u30C7\\u30EB\\u3092\\u5229\\u7528\\u3057\\u307E\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"from\"), \" datetime \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"import\"), \" date\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"from\"), \" pydantic \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"import\"), \" BaseModel\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" Field\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" root_validator\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" validator\\n\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# \\u53D7\\u4ED8\\u53EF\\u80FD\\u306A\\u56FD\\u30B3\\u30FC\\u30C9\"), \"\\nvalid_iso_3166_1_alpha2_values\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"set\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"JP\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"SG\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"US\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"}\"), \"\\n\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"Temperature\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"BaseModel\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"\\\"\\\"\\\"\\n    \\u30B9\\u30D7\\u30EC\\u30C3\\u30C9\\u30B7\\u30FC\\u30C8\\u306E1\\u884C\\u3092\\u8868\\u3059\\u30E2\\u30C7\\u30EB\\n    \\\"\\\"\\\"\"), \"\\n\\n    input_date\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" date \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Field\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"alias\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\\u5165\\u529B\\u65E5\\uFF08YYYY-MM-DD\\uFF09\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n    country_code\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"str\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Field\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"alias\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\\u56FD\\u30B3\\u30FC\\u30C9\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n    low\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"float\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Field\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"alias\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\\u6700\\u4F4E\\u6C17\\u6E29\\uFF08\\u6442\\u6C0F\\uFF09\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n    high\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"float\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Field\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"alias\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\\u6700\\u9AD8\\u6C17\\u6E29\\uFF08\\u6442\\u6C0F\\uFF09\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"Config\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"\\\"\\\"\\\"\\n        \\u65E5\\u672C\\u8A9E\\u5217\\u540D\\u3067\\u306E\\u53CE\\u96C6\\n        \\\"\\\"\\\"\"), \"\\n        allow_population_by_field_name \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-red\"\n  }), \"True\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"@validator\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"country_code\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"def\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }), \"check_country_code\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"cls\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" v\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"\\\"\\\"\\\"\\n        \\u56FD\\u30B3\\u30FC\\u30C9\\u304CISO\\u306B\\u5B58\\u5728\\u3059\\u308B\\u304B\\u30C1\\u30A7\\u30C3\\u30AF\\n        \\\"\\\"\\\"\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"if\"), \" v \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"not\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"in\"), \" valid_iso_3166_1_alpha2_values\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"raise\"), \" ValueError\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"f\\\"Unknown country_code \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"{\"), \"v\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"return\"), \" v\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"@root_validator\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"def\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }), \"check_low_high\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"cls\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \" values\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"\\\"\\\"\\\"\\n        low <= high \\u306E\\u6761\\u4EF6\\u3092\\u30C1\\u30A7\\u30C3\\u30AF\\n        \\\"\\\"\\\"\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"if\"), \" values\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"low\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \">\"), \" values\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"high\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"raise\"), \" ValueError\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"f\\\"low is higher than high\\\"\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"return\"), \" values\\n\\n\\ndata \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\\u5165\\u529B\\u65E5\\uFF08YYYY-MM-DD\\uFF09\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"2021-08-31\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\\u56FD\\u30B3\\u30FC\\u30C9\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"JP\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\\u6700\\u4F4E\\u6C17\\u6E29\\uFF08\\u6442\\u6C0F\\uFF09\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"28.2\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"\\u6700\\u9AD8\\u6C17\\u6E29\\uFF08\\u6442\\u6C0F\\uFF09\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"38.1\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"}\"), \"\\n\\nt \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" Temperature\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), \"parse_obj\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"d\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\")), mdx(\"p\", null, \"\\u5B9F\\u88C5\\u306E\\u30DD\\u30A4\\u30F3\\u30C8\\u3092\\u89E3\\u8AAC\\u3057\\u307E\\u3059\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u4F8B\\u3048\\u3070 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gspread\"), \" \\u306E \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"get_all_records()\"), \" \\u3092\\u5229\\u7528\\u3057\\u3066\\u30B9\\u30D7\\u30EC\\u30C3\\u30C9\\u30B7\\u30FC\\u30C8\\u3092\\u8AAD\\u307F\\u53D6\\u308B\\u3068\\u3001\\u5148\\u982D\\u884C\\u306E\\u5217\\u540D\\u304C\\u30AD\\u30FC\\u3068\\u306A\\u3063\\u305F dict \\u914D\\u5217\\u304C\\u53D6\\u5F97\\u3067\\u304D\\u307E\\u3059\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Field(alias=...)\"), \" \\u3067\\u65E5\\u672C\\u8A9E\\u5217\\u540D\\u3092\\u5B9A\\u7FA9\\u3057\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"allow_population_by_field_name\"), \" \\u3092\\u8A2D\\u5B9A\\u3059\\u308B\\u3053\\u3068\\u3067\\u3001\\u65E5\\u672C\\u8A9E\\u5217\\u540D\\u304C\\u30AD\\u30FC\\u3068\\u306A\\u3063\\u3066\\u3044\\u308B dict \\u3092\\u5B9F\\u969B\\u306E\\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\\u306B\\u30DE\\u30C3\\u30D4\\u30F3\\u30B0\\u3057\\u306A\\u304C\\u3089\\u8AAD\\u307F\\u8FBC\\u3081\\u307E\\u3059\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u578B\\u306B \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"date\"), \" \\u3092\\u6307\\u5B9A\\u3059\\u308C\\u3070\\u3001\\u81EA\\u52D5\\u7684\\u306B \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"YYYY-MM-DD\"), \" \\u5F62\\u5F0F\\u306E\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\\u304C\\u5B9F\\u65BD\\u3055\\u308C\\u307E\\u3059\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u56FD\\u30B3\\u30FC\\u30C9\\u306E\\u30C1\\u30A7\\u30C3\\u30AF\\u306F\\u3001 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"validator\"), \" \\u3092\\u4F7F\\u3063\\u305F \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"check_country_code\"), \" \\u3068\\u3057\\u3066\\u5B9F\\u88C5\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\\u3053\\u306E\\u3088\\u3046\\u306B\\u3001\\u5358\\u4E00\\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\\u306E\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\\u306F \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"validator\"), \" \\u3092\\u4F7F\\u3044\\u81EA\\u7531\\u5EA6\\u9AD8\\u304F\\u5B9F\\u88C5\\u3067\\u304D\\u307E\\u3059\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u6700\\u4F4E\\u6C17\\u6E29\\u3068\\u6700\\u9AD8\\u6C17\\u6E29\\u306E\\u95A2\\u4FC2\\u6027\\u3068\\u3044\\u3063\\u305F\\u3001\\u8907\\u6570\\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\\u306B\\u307E\\u305F\\u304C\\u308B\\u30C1\\u30A7\\u30C3\\u30AF\\u306F \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"root_validator\"), \" \\u3092\\u4F7F\\u3063\\u3066\\u5B9F\\u88C5\\u53EF\\u80FD\\u3067\\u3059\\u3002\")), mdx(\"p\", null, \"\\u3061\\u306A\\u307F\\u306B\\u3001\\u3053\\u306E\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u306F\\u672C\\u6765\\u306E\\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\\u540D\\u30FB\\u30A8\\u30A4\\u30EA\\u30A2\\u30B9\\u3069\\u3061\\u3089\\u306E dict \\u306B\\u3082\\u623B\\u3059\\u3053\\u3068\\u304C\\u53EF\\u80FD\\u3067\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# \\u672C\\u6765\\u306E\\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\\u540D\\u3092\\u30AD\\u30FC\\u3068\\u3057\\u305Fdict\\u306B\\u5909\\u63DB\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"dict\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# alias\\u306B\\u5B9A\\u7FA9\\u3055\\u308C\\u305F\\u65E5\\u672C\\u8A9E\\u306E\\u30D5\\u30A3\\u30FC\\u30EB\\u30C9\\u540D\\u3092\\u30AD\\u30FC\\u3068\\u3057\\u305Fdict\\u306B\\u5909\\u63DB\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"t\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"dict\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"by_alias\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-red\"\n  }), \"True\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\")), mdx(\"h1\", {\n    \"id\": \"appendix\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#appendix\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"Appendix\"), mdx(\"h2\", {\n    \"id\": \"dataclass-との比較\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#dataclass-%E3%81%A8%E3%81%AE%E6%AF%94%E8%BC%83\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"dataclass \\u3068\\u306E\\u6BD4\\u8F03\"), mdx(\"p\", null, \"\\u30C7\\u30FC\\u30BF\\u30E2\\u30C7\\u30EB\\u3092\\u5B9A\\u7FA9\\u3067\\u304D\\u308B\\u3068\\u3044\\u3046\\u610F\\u5473\\u306B\\u304A\\u3044\\u3066\\u306F\\u3001Python \\u306B\\u7D44\\u307F\\u8FBC\\u307F\\u3067\\u642D\\u8F09\\u3055\\u308C\\u3066\\u3044\\u308B \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dataclass\"), \" \\u3068\\u4F3C\\u3066\\u308B\\u3088\\u3046\\u306B\\u3082\\u611F\\u3058\\u307E\\u3059\\u306E\\u3067\\u3001\\u6BD4\\u8F03\\u3092\\u3057\\u3066\\u307F\\u307E\\u3059\\u3002\"), mdx(\"h3\", {\n    \"id\": \"バリデーション\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\"), mdx(\"p\", null, \"dataclass \\u306B\\u306F\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\\u306E\\u6A5F\\u80FD\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\\n\\u578B\\u3092\\u5B9A\\u7FA9\\u3067\\u304D\\u307E\\u3059\\u304C\\u3001\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\\u304C\\u884C\\u308F\\u308C\\u308B\\u308F\\u3051\\u3067\\u306F\\u306A\\u3044\\u306E\\u3067\\u3001\\u5B9F\\u969B\\u306B\\u306F\\u7570\\u306A\\u308B\\u578B\\u306E\\u30C7\\u30FC\\u30BF\\u3092\\u30BB\\u30C3\\u30C8\\u3067\\u304D\\u3066\\u3057\\u307E\\u3044\\u307E\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"@dataclass\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"P\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n    i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"int\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }), \"# \\u4F8B\\u5916\\u306B\\u306F\\u306A\\u3089\\u306A\\u3044\"), \"\\nP\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }), \"\\\"hoge\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), \"\\n\")), mdx(\"h3\", {\n    \"id\": \"シリアライズ・デシリアライズ\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BA%E3%83%BB%E3%83%87%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BA\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u30B7\\u30EA\\u30A2\\u30E9\\u30A4\\u30BA\\u30FB\\u30C7\\u30B7\\u30EA\\u30A2\\u30E9\\u30A4\\u30BA\"), mdx(\"p\", null, \"dataclass \\u306F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"asdict\"), \" \\u3092\\u4F7F\\u3046\\u3053\\u3068\\u3067\\u3001dict \\u3078\\u306E\\u5909\\u63DB\\u306F\\u3067\\u304D\\u307E\\u3059\\u3002\\u3057\\u304B\\u3057\\u3001\\u5B9F\\u969B\\u306B\\u6587\\u5B57\\u5217\\u306B\\u5909\\u63DB\\u3059\\u308B\\u306B\\u306F\\u305D\\u306E dict \\u3092 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"json.dumps\"), \" \\u306A\\u3069\\u3057\\u306A\\u3051\\u308C\\u3070\\u3044\\u3051\\u307E\\u305B\\u3093\\u3002\\u307E\\u305F\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"datetime\"), \" \\u578B\\u304C\\u5165\\u3063\\u3066\\u3044\\u305F\\u5834\\u5408\\u3001\\u5358\\u7D14\\u306A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"json.dumps\"), \" \\u3067\\u306F\\u4F8B\\u5916\\u3068\\u306A\\u3063\\u3066\\u3057\\u307E\\u3046\\u305F\\u3081\\u3001\\u3072\\u3068\\u624B\\u9593\\u5FC5\\u8981\\u3067\\u3059\\u3002\"), mdx(\"p\", null, \"\\u4E00\\u65B9\\u3001pydantic \\u3067\\u306F\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".json()\"), \" \\u3084 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".parse_raw()\"), \" \\u95A2\\u6570\\u3092\\u4F7F\\u3046\\u3053\\u3068\\u3067\\u7C21\\u5358\\u306B\\u6587\\u5B57\\u5217\\u30FB\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u9593\\u306E\\u5909\\u63DB\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\\u307E\\u305F\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"datetime\"), \" \\u306E\\u3088\\u3046\\u306A\\u578B\\u3082\\u3046\\u307E\\u304F\\u6271\\u3046\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\"), mdx(\"h3\", {\n    \"id\": \"イミュータブル\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"\\u30A4\\u30DF\\u30E5\\u30FC\\u30BF\\u30D6\\u30EB\"), mdx(\"p\", null, \"\\u3053\\u308C\\u306F\\u3069\\u3061\\u3089\\u3067\\u3082\\u5B9F\\u73FE\\u3067\\u304D\\u307E\\u3059\\u3002dataclass \\u3067\\u306F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dataclass(frozen=True)\"), \" \\u306E\\u3088\\u3046\\u306B\\u3057\\u307E\\u3059\\u3002\\npydantic \\u3067\\u306F\\u3001\\u4EE5\\u4E0B\\u306E\\u3088\\u3046\\u306B\\u5B9A\\u7FA9\\u3057\\u307E\\u3059\\u3002\"), mdx(\"pre\", {\n    \"className\": \"language-python\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"PP\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \"(\"), \"BaseModel\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n    i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"int\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"Config\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }), \":\"), \"\\n        allow_mutation \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-red\"\n  }), \"False\"), \"\\n\")), mdx(\"p\", null, \"dataclass \\u306E\\u5834\\u5408\\u306F hash \\u5316\\u3067\\u304D\\u307E\\u3059\\u304C\\u3001pydantic \\u306E\\u5834\\u5408\\u306F\\u30A4\\u30DF\\u30E5\\u30FC\\u30BF\\u30D6\\u30EB\\u3067\\u3042\\u3063\\u3066\\u3082\\u30CF\\u30C3\\u30B7\\u30E5\\u5316\\u3067\\u304D\\u307E\\u305B\\u3093\\u3002\"), mdx(\"p\", null, \"\\u5168\\u4F53\\u7684\\u306B pydantic \\u5BC4\\u308A\\u306A\\u6BD4\\u8F03\\u3092\\u3057\\u3066\\u3057\\u307E\\u3044\\u307E\\u3057\\u305F\\u304C\\u3001\\u3053\\u306E\\uFF12\\u3064\\u306F\\u5BFE\\u6BD4\\u3057\\u3066\\u3069\\u3061\\u3089\\u304B\\u4E00\\u65B9\\u306E\\u307F\\u3092\\u4F7F\\u3046\\u3082\\u306E\\u3067\\u306F\\u306A\\u3044\\u3068\\u8003\\u3048\\u3066\\u3044\\u307E\\u3059\\u3002\\n\\u30D0\\u30EA\\u30C7\\u30FC\\u30B7\\u30E7\\u30F3\\u304C\\u5FC5\\u8981\\u306A\\u30C7\\u30FC\\u30BF\\u30E2\\u30C7\\u30EB\\u3092\\u5B9A\\u7FA9\\u3059\\u308B\\u306B\\u306F pydantic \\u304C\\u5FC5\\u8981\\u3067\\u3057\\u3087\\u3046\\u3002\\u305D\\u3053\\u307E\\u3067\\u53B3\\u5BC6\\u3067\\u306A\\u3044\\u4FBF\\u5229\\u306A\\u30C7\\u30FC\\u30BF\\u30DB\\u30EB\\u30C0\\u30FC\\u3092\\u5B9A\\u7FA9\\u3059\\u308B\\u306A\\u3089 dataclass \\u3067\\u5341\\u5206\\u3067\\u3057\\u3087\\u3046\\u3002\"), mdx(\"h2\", {\n    \"id\": \"pep-563-の影響\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#pep-563-%E3%81%AE%E5%BD%B1%E9%9F%BF\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }))), \"PEP 563 \\u306E\\u5F71\\u97FF\"), mdx(\"p\", null, \"pydantic \\u306F\\u30A2\\u30CE\\u30C6\\u30FC\\u30B7\\u30E7\\u30F3\\u5B9F\\u884C\\u6642\\u306E\\u578B\\u60C5\\u5831\\u3092\\u5229\\u7528\\u3057\\u3066\\u3044\\u308B\\u306E\\u3067\\u3059\\u304C\\u30013.10 \\u3067\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u306E\\u6319\\u52D5\\u3068\\u306A\\u308B\\u4E88\\u5B9A\\u3060\\u3063\\u305F \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.python.org/dev/peps/pep-0563/\"\n  }), \"PEP563\"), \" \\u304C pydantic \\u306E\\u52D5\\u4F5C\\u306B\\u5F71\\u97FF\\u3092\\u4E0E\\u3048\\u308B\\u3001\\u3068\\u3044\\u3046\\u61F8\\u5FF5\\u304C\\u51FA\\u3066\\u3044\\u307E\\u3044\\u305F\\u3002\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/tiangolo/status/1384596307868794882?lang=en\"\n  }), \"https://twitter.com/tiangolo/status/1384596307868794882?lang=en\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/samuelcolvin/pydantic/issues/2678\"\n  }), \"https://github.com/samuelcolvin/pydantic/issues/2678\")), mdx(\"p\", null, \"\\u7D50\\u679C\\u7684\\u306B\\u306F \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mail.python.org/archives/list/python-dev@python.org/thread/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/\"\n  }), \"3.10 \\u306B\\u306F\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u3068\\u3057\\u306A\\u3044\\u6C7A\\u5B9A\\u304C\\u306A\\u3055\\u308C\\u307E\\u3057\\u305F\\u3002\")), mdx(\"p\", null, \"\\u8A73\\u3057\\u3044\\u5185\\u5BB9\\u3084\\u7D4C\\u7DEF\\u306F\\u4EE5\\u4E0B\\u30EA\\u30F3\\u30AF\\u306B\\u3082\\u3042\\u308A\\u307E\\u3059\\u306E\\u3067\\u3001\\u305D\\u3061\\u3089\\u3082\\u304A\\u8AAD\\u307F\\u304F\\u3060\\u3055\\u3044\\u3002\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dev.to/tiangolo/the-future-of-fastapi-and-pydantic-is-bright-3pbm\"\n  }), \"The Future of FastAPI and Pydantic is Bright\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://methane.hatenablog.jp/entry/2021/04/21/%60from___future___import_annotations%60_%E3%81%8CPython_3.10%E3%81%A7%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%AB%E3%81%AA%E3%82%89%E3%81%AA%E3%81%8F%E3%81%AA%E3%82%8A%E3%81%BE%E3%81%97\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"from __future__ import annotations\"), \" \\u304C Python 3.10 \\u3067\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u306B\\u306A\\u3089\\u306A\\u304F\\u306A\\u308A\\u307E\\u3057\\u305F\")), mdx(\"hr\", null), mdx(\"p\", null, \"\\u4EE5\\u4E0A\\u3001pydantic \\u306E\\u7D39\\u4ECB\\u3067\\u3057\\u305F\\u3002\\u30C7\\u30FC\\u30BF\\u3092\\u53D6\\u308A\\u56DE\\u3059\\u306B\\u306F\\u3068\\u3066\\u3082\\u4FBF\\u5229\\u306A\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u306A\\u306E\\u3067\\u91CD\\u5B9D\\u3057\\u3066\\u3044\\u307E\\u3059\\uFF01\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"about\"><a href=\"#about\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>About</h1><p>pydantic 単体でも利用可能な便利な機能についてご紹介します。</p><h1 id=\"pydantic-とは\"><a href=\"#pydantic-%E3%81%A8%E3%81%AF\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>pydantic とは</h1><p><a href=\"https://pydantic-docs.helpmanual.io/\">公式ドキュメント</a> の冒頭には以下のような記載があります。</p><blockquote><p>Data validation and settings management using python type annotations.</p></blockquote><p>python の型アノテーションを使った、データバリデーションと設定管理のライブラリ、ですね。</p><h2 id=\"基本的な使い方\"><a href=\"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>基本的な使い方</h2><p>このあとの話を理解するのに必要な、基本となる機能をさらっと紹介します。</p><h3 id=\"モデルの定義\"><a href=\"#%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AE%E5%AE%9A%E7%BE%A9\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>モデルの定義</h3><p>pydantic では、クラスを使ってモデルを定義します。\n各フィールドには型が必要です。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-code-purple\">from</span> datetime <span class=\"text-code-purple\">import</span> datetime\n<span class=\"text-code-purple\">from</span> typing <span class=\"text-code-purple\">import</span> Optional\n<span class=\"text-code-purple\">from</span> pydantic <span class=\"text-code-purple\">import</span> BaseModel<span class=\"text-code-white\">,</span> Field\n\n\n<span class=\"text-code-purple\">class</span> <span class=\"\">Order</span><span class=\"text-code-white\">(</span>BaseModel<span class=\"text-code-white\">)</span><span class=\"text-code-white\">:</span>\n    name<span class=\"text-code-white\">:</span> <span class=\"\">str</span>\n    created_at<span class=\"text-code-white\">:</span> datetime\n    price<span class=\"text-code-white\">:</span> <span class=\"\">float</span> <span class=\"\">=</span> Field<span class=\"text-code-white\">(</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">,</span> gt<span class=\"\">=</span><span class=\"\">0</span><span class=\"text-code-white\">)</span>\n    note<span class=\"text-code-white\">:</span> Optional<span class=\"text-code-white\">[</span><span class=\"\">str</span><span class=\"text-code-white\">]</span> <span class=\"\">=</span> <span class=\"text-code-red\">None</span>\n</code></pre><h3 id=\"インスタンス化とバリデーション\"><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E5%8C%96%E3%81%A8%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>インスタンス化とバリデーション</h3><p>dict オブジェクトから、モデルオブジェクトを生成します。生成時に、モデル定義に従ったバリデーションが行われます。\nバリデーションに違反した場合、例外となります。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-gray-400 italic\"># OK</span>\no1 <span class=\"\">=</span> Order<span class=\"text-code-white\">.</span>parse_obj<span class=\"text-code-white\">(</span><span class=\"text-code-white\">{</span><span class=\"text-code-green\">&quot;name&quot;</span><span class=\"text-code-white\">:</span> <span class=\"text-code-green\">&quot;order1&quot;</span><span class=\"text-code-white\">,</span> <span class=\"text-code-green\">&quot;created_at&quot;</span><span class=\"text-code-white\">:</span> datetime<span class=\"text-code-white\">.</span>now<span class=\"text-code-white\">(</span><span class=\"text-code-white\">)</span><span class=\"text-code-white\">,</span> <span class=\"text-code-green\">&quot;price&quot;</span><span class=\"text-code-white\">:</span> <span class=\"\">100.1</span><span class=\"text-code-white\">}</span><span class=\"text-code-white\">)</span>\n<span class=\"text-gray-400 italic\"># NG (created_atがない)</span>\no2 <span class=\"\">=</span> Order<span class=\"text-code-white\">.</span>parse_obj<span class=\"text-code-white\">(</span><span class=\"text-code-white\">{</span><span class=\"text-code-green\">&quot;name&quot;</span><span class=\"text-code-white\">:</span> <span class=\"text-code-green\">&quot;order2&quot;</span><span class=\"text-code-white\">,</span> <span class=\"text-code-green\">&quot;price&quot;</span><span class=\"text-code-white\">:</span> <span class=\"\">100.1</span><span class=\"text-code-white\">}</span><span class=\"text-code-white\">)</span>\n<span class=\"text-gray-400 italic\"># NG (priceが0未満)</span>\no3 <span class=\"\">=</span> Order<span class=\"text-code-white\">.</span>parse_obj<span class=\"text-code-white\">(</span><span class=\"text-code-white\">{</span><span class=\"text-code-green\">&quot;name&quot;</span><span class=\"text-code-white\">:</span> <span class=\"text-code-green\">&quot;order3&quot;</span><span class=\"text-code-white\">,</span> <span class=\"text-code-green\">&quot;created_at&quot;</span><span class=\"text-code-white\">:</span> datetime<span class=\"text-code-white\">.</span>now<span class=\"text-code-white\">(</span><span class=\"text-code-white\">)</span><span class=\"text-code-white\">,</span> <span class=\"text-code-green\">&quot;price&quot;</span><span class=\"text-code-white\">:</span> <span class=\"\">-</span><span class=\"\">1</span><span class=\"text-code-white\">}</span><span class=\"text-code-white\">)</span>\n</code></pre><h3 id=\"pydantic-と-fastapi\"><a href=\"#pydantic-%E3%81%A8-fastapi\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>pydantic と FastAPI</h3><p>FastAPI のユーザーであれば、<a href=\"https://fastapi.tiangolo.com/tutorial/body/#import-pydantics-basemodel\">コチラ</a> にあるように、リクエストボディを定義するライブラリとして馴染みがあるでしょう。</p><p>ただ、実際は FastAPI 専用のライブラリというわけではなく、pydantic 単体での利用でも非常に便利なのです。\n以下では、単体としてどのような利用があるかをご紹介します。</p><h1 id=\"pydantic-単体での具体的なユースケース\"><a href=\"#pydantic-%E5%8D%98%E4%BD%93%E3%81%A7%E3%81%AE%E5%85%B7%E4%BD%93%E7%9A%84%E3%81%AA%E3%83%A6%E3%83%BC%E3%82%B9%E3%82%B1%E3%83%BC%E3%82%B9\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>pydantic 単体での具体的なユースケース</h1><h2 id=\"case-1-json-等で記述されたファイルを型安全に読み書きする\"><a href=\"#case-1-json-%E7%AD%89%E3%81%A7%E8%A8%98%E8%BF%B0%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%9E%8B%E5%AE%89%E5%85%A8%E3%81%AB%E8%AA%AD%E3%81%BF%E6%9B%B8%E3%81%8D%E3%81%99%E3%82%8B\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Case 1: json 等で記述されたファイルを型安全に読み書きする</h2><p>シンプルなユースケースとして、外部ファイルの入出力を型安全に行うというものがあります。</p><p>例えば、先程定義した <code>Order</code> モデルを json ファイルとして扱うとしましょう。</p><h3 id=\"json-ファイルを読み取り、モデルオブジェクトを生成\"><a href=\"#json-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8A%E3%80%81%E3%83%A2%E3%83%87%E3%83%AB%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E7%94%9F%E6%88%90\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>json ファイルを読み取り、モデルオブジェクトを生成</h3><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-code-purple\">from</span> pathlib <span class=\"text-code-purple\">import</span> Path\n\nfpath <span class=\"\">=</span> Path<span class=\"text-code-white\">(</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">)</span>\n\nmodel <span class=\"\">=</span> Order<span class=\"text-code-white\">.</span>parse_file<span class=\"text-code-white\">(</span>fpath<span class=\"text-code-white\">)</span>\n</code></pre><p><code>Object.parse_file</code> で、json の中身がスキーマとずれていれば、例外となります。</p><h3 id=\"モデルオブジェクトを-json-ファイルへ書き込み\"><a href=\"#%E3%83%A2%E3%83%87%E3%83%AB%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92-json-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%B8%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>モデルオブジェクトを json ファイルへ書き込み</h3><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-code-purple\">from</span> pathlib <span class=\"text-code-purple\">import</span> Path\n\nfpath <span class=\"\">=</span> Path<span class=\"text-code-white\">(</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">)</span>\n\nmodel<span class=\"text-code-white\">:</span> Order <span class=\"\">=</span> <span class=\"text-code-white\">.</span><span class=\"text-code-white\">.</span><span class=\"text-code-white\">.</span>\nfpath<span class=\"text-code-white\">.</span>write_text<span class=\"text-code-white\">(</span>model<span class=\"text-code-white\">.</span>json<span class=\"text-code-white\">(</span><span class=\"text-code-white\">)</span><span class=\"text-code-white\">)</span>\n</code></pre><p>シンプルですね！ <code>datetime</code> 型のような、encoder の設定無しには扱えない型もよしなに変換してくれます。(ISO フォーマットが利用されます)</p><h2 id=\"case-2-環境変数を混じえた、アプリケーション設定の読み込み\"><a href=\"#case-2-%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%82%92%E6%B7%B7%E3%81%98%E3%81%88%E3%81%9F%E3%80%81%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%A8%AD%E5%AE%9A%E3%81%AE%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Case 2: 環境変数を混じえた、アプリケーション設定の読み込み</h2><p>入力ソースが複数ある環境設定の読み込みにも利用できます。</p><p>公式のガイドは<a href=\"https://pydantic-docs.helpmanual.io/usage/settings/\">コチラ</a>。</p><h3 id=\"設定の定義\"><a href=\"#%E8%A8%AD%E5%AE%9A%E3%81%AE%E5%AE%9A%E7%BE%A9\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>設定の定義</h3><p>通常のモデルと異なり、 <code>BaseSettings</code> クラスを利用します。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-code-purple\">from</span> pydantic <span class=\"text-code-purple\">import</span> BaseSettings\n\n\n<span class=\"text-code-purple\">class</span> <span class=\"\">AppSettings</span><span class=\"text-code-white\">(</span>BaseSettings<span class=\"text-code-white\">)</span><span class=\"text-code-white\">:</span>\n    api_key<span class=\"text-code-white\">:</span> <span class=\"\">str</span>\n    debug_mode<span class=\"text-code-white\">:</span> <span class=\"\">bool</span> <span class=\"\">=</span> <span class=\"text-code-red\">False</span>\n\n    <span class=\"text-code-purple\">class</span> <span class=\"\">Config</span><span class=\"text-code-white\">:</span>\n        env_prefix <span class=\"\">=</span> <span class=\"text-code-green\">&#x27;my_app_&#x27;</span>\n</code></pre><h3 id=\"環境変数・引数からの読み取り\"><a href=\"#%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%83%BB%E5%BC%95%E6%95%B0%E3%81%8B%E3%82%89%E3%81%AE%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8A\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>環境変数・引数からの読み取り</h3><p>例えば、 <code>MY_APP_API_KEY</code> のような環境変数が定義されている場合、 <code>api_key</code> フィールドに入る値はその環境変数から読み取ります。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-gray-400 italic\"># api_key は必須だが、環境変数定義があるためインスタンス化可能</span>\ns <span class=\"\">=</span> AppSettings<span class=\"text-code-white\">(</span><span class=\"text-code-white\">)</span>\n</code></pre><p>一方、引数としても与えられた場合、引数が優先されます。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-gray-400 italic\"># 環境変数 MY_APP_API_KEY の値は無視され、api_keyは&quot;aaa&quot;となる</span>\ns <span class=\"\">=</span> AppSettings<span class=\"text-code-white\">(</span>api_key<span class=\"\">=</span><span class=\"text-code-green\">&quot;aaa&quot;</span><span class=\"text-code-white\">)</span>\n</code></pre><p>その他、dotenv や Secret からの読み取りにも対応しています。完全な優先順序は<a href=\"https://pydantic-docs.helpmanual.io/usage/settings/#field-value-priority\">コチラ</a>。順序のカスタマイズも可能です。</p><h2 id=\"case-3-google-spreadsheet-に入力された日本語ヘッダー付きシートの読み取り\"><a href=\"#case-3-google-spreadsheet-%E3%81%AB%E5%85%A5%E5%8A%9B%E3%81%95%E3%82%8C%E3%81%9F%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E4%BB%98%E3%81%8D%E3%82%B7%E3%83%BC%E3%83%88%E3%81%AE%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8A\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Case 3: Google Spreadsheet に入力された日本語ヘッダー付きシートの読み取り</h2><p>応用として、このようなケースを考えてみましょう。</p><h3 id=\"このユースケースについて\"><a href=\"#%E3%81%93%E3%81%AE%E3%83%A6%E3%83%BC%E3%82%B9%E3%82%B1%E3%83%BC%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>このユースケースについて</h3><ol><li>スプレッドシートに書き込まれた情報を、Python プログラムから読み取りたい。</li><li>データがこちらの想定通りに入力されているかチェックをしたい。</li><li>スプレッドシートの先頭には日本語のカラム名を入力したい。</li></ol><p>イメージとしては、以下のようなスプレッドシートとなります。</p><table><thead><tr><th>入力日（YYYY-MM-DD）</th><th>国コード</th><th>最低気温（摂氏）</th><th>最高気温（摂氏）</th></tr></thead><tbody><tr><td>2021-08-31</td><td>JP</td><td>25</td><td>35</td></tr><tr><td>2021-09-01</td><td>JP</td><td>23</td><td>31</td></tr></tbody></table><p>このデータには、以下の入力ルールが存在します。</p><ul><li>入力日は <code>YYYY-MM-DD</code> 形式</li><li>国コードは<a href=\"https://ja.wikipedia.org/wiki/ISO_3166-1\">ISO-3166-1 alpha2</a></li><li>最低気温 &lt;= 最高気温</li></ul><h3 id=\"pydantic-を使った実装\"><a href=\"#pydantic-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E5%AE%9F%E8%A3%85\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>pydantic を使った実装</h3><p>このデータを正しくかつ効率的に取り扱うには、以下のようなモデルを利用します。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-code-purple\">from</span> datetime <span class=\"text-code-purple\">import</span> date\n\n<span class=\"text-code-purple\">from</span> pydantic <span class=\"text-code-purple\">import</span> BaseModel<span class=\"text-code-white\">,</span> Field<span class=\"text-code-white\">,</span> root_validator<span class=\"text-code-white\">,</span> validator\n\n\n<span class=\"text-gray-400 italic\"># 受付可能な国コード</span>\nvalid_iso_3166_1_alpha2_values<span class=\"text-code-white\">:</span> <span class=\"\">set</span> <span class=\"\">=</span> <span class=\"text-code-white\">{</span><span class=\"text-code-green\">&quot;JP&quot;</span><span class=\"text-code-white\">,</span> <span class=\"text-code-green\">&quot;SG&quot;</span><span class=\"text-code-white\">,</span> <span class=\"text-code-green\">&quot;US&quot;</span><span class=\"text-code-white\">}</span>\n\n\n<span class=\"text-code-purple\">class</span> <span class=\"\">Temperature</span><span class=\"text-code-white\">(</span>BaseModel<span class=\"text-code-white\">)</span><span class=\"text-code-white\">:</span>\n    <span class=\"\">&quot;&quot;&quot;\n    スプレッドシートの1行を表すモデル\n    &quot;&quot;&quot;</span>\n\n    input_date<span class=\"text-code-white\">:</span> date <span class=\"\">=</span> Field<span class=\"text-code-white\">(</span>alias<span class=\"\">=</span><span class=\"text-code-green\">&quot;入力日（YYYY-MM-DD）&quot;</span><span class=\"text-code-white\">)</span>\n    country_code<span class=\"text-code-white\">:</span> <span class=\"\">str</span> <span class=\"\">=</span> Field<span class=\"text-code-white\">(</span>alias<span class=\"\">=</span><span class=\"text-code-green\">&quot;国コード&quot;</span><span class=\"text-code-white\">)</span>\n    low<span class=\"text-code-white\">:</span> <span class=\"\">float</span> <span class=\"\">=</span> Field<span class=\"text-code-white\">(</span>alias<span class=\"\">=</span><span class=\"text-code-green\">&quot;最低気温（摂氏）&quot;</span><span class=\"text-code-white\">)</span>\n    high<span class=\"text-code-white\">:</span> <span class=\"\">float</span> <span class=\"\">=</span> Field<span class=\"text-code-white\">(</span>alias<span class=\"\">=</span><span class=\"text-code-green\">&quot;最高気温（摂氏）&quot;</span><span class=\"text-code-white\">)</span>\n\n    <span class=\"text-code-purple\">class</span> <span class=\"\">Config</span><span class=\"text-code-white\">:</span>\n        <span class=\"\">&quot;&quot;&quot;\n        日本語列名での収集\n        &quot;&quot;&quot;</span>\n        allow_population_by_field_name <span class=\"\">=</span> <span class=\"text-code-red\">True</span>\n\n    <span class=\"\">@validator</span><span class=\"text-code-white\">(</span><span class=\"text-code-green\">&quot;country_code&quot;</span><span class=\"text-code-white\">)</span>\n    <span class=\"text-code-purple\">def</span> <span class=\"text-code-blue\">check_country_code</span><span class=\"text-code-white\">(</span>cls<span class=\"text-code-white\">,</span> v<span class=\"text-code-white\">)</span><span class=\"text-code-white\">:</span>\n        <span class=\"\">&quot;&quot;&quot;\n        国コードがISOに存在するかチェック\n        &quot;&quot;&quot;</span>\n        <span class=\"text-code-purple\">if</span> v <span class=\"text-code-purple\">not</span> <span class=\"text-code-purple\">in</span> valid_iso_3166_1_alpha2_values<span class=\"text-code-white\">:</span>\n            <span class=\"text-code-purple\">raise</span> ValueError<span class=\"text-code-white\">(</span><span class=\"\"><span class=\"text-code-green\">f&quot;Unknown country_code </span><span class=\"\"><span class=\"text-code-white\">{</span>v<span class=\"text-code-white\">}</span></span><span class=\"text-code-green\">&quot;</span></span><span class=\"text-code-white\">)</span>\n        <span class=\"text-code-purple\">return</span> v\n\n    <span class=\"\">@root_validator</span>\n    <span class=\"text-code-purple\">def</span> <span class=\"text-code-blue\">check_low_high</span><span class=\"text-code-white\">(</span>cls<span class=\"text-code-white\">,</span> values<span class=\"text-code-white\">)</span><span class=\"text-code-white\">:</span>\n        <span class=\"\">&quot;&quot;&quot;\n        low &lt;= high の条件をチェック\n        &quot;&quot;&quot;</span>\n        <span class=\"text-code-purple\">if</span> values<span class=\"text-code-white\">[</span><span class=\"text-code-green\">&quot;low&quot;</span><span class=\"text-code-white\">]</span> <span class=\"\">&gt;</span> values<span class=\"text-code-white\">[</span><span class=\"text-code-green\">&quot;high&quot;</span><span class=\"text-code-white\">]</span><span class=\"text-code-white\">:</span>\n            <span class=\"text-code-purple\">raise</span> ValueError<span class=\"text-code-white\">(</span><span class=\"\"><span class=\"text-code-green\">f&quot;low is higher than high&quot;</span></span><span class=\"text-code-white\">)</span>\n        <span class=\"text-code-purple\">return</span> values\n\n\ndata <span class=\"\">=</span> <span class=\"text-code-white\">{</span>\n    <span class=\"text-code-green\">&quot;入力日（YYYY-MM-DD）&quot;</span><span class=\"text-code-white\">:</span> <span class=\"text-code-green\">&quot;2021-08-31&quot;</span><span class=\"text-code-white\">,</span>\n    <span class=\"text-code-green\">&quot;国コード&quot;</span><span class=\"text-code-white\">:</span> <span class=\"text-code-green\">&quot;JP&quot;</span><span class=\"text-code-white\">,</span>\n    <span class=\"text-code-green\">&quot;最低気温（摂氏）&quot;</span><span class=\"text-code-white\">:</span> <span class=\"text-code-green\">&quot;28.2&quot;</span><span class=\"text-code-white\">,</span>\n    <span class=\"text-code-green\">&quot;最高気温（摂氏）&quot;</span><span class=\"text-code-white\">:</span> <span class=\"text-code-green\">&quot;38.1&quot;</span><span class=\"text-code-white\">,</span>\n<span class=\"text-code-white\">}</span>\n\nt <span class=\"\">=</span> Temperature<span class=\"text-code-white\">.</span>parse_obj<span class=\"text-code-white\">(</span>d<span class=\"text-code-white\">)</span>\n</code></pre><p>実装のポイントを解説します。</p><ul><li>例えば <code>gspread</code> の <code>get_all_records()</code> を利用してスプレッドシートを読み取ると、先頭行の列名がキーとなった dict 配列が取得できます。</li><li><code>Field(alias=...)</code> で日本語列名を定義し、<code>allow_population_by_field_name</code> を設定することで、日本語列名がキーとなっている dict を実際のフィールドにマッピングしながら読み込めます。</li><li>型に <code>date</code> を指定すれば、自動的に <code>YYYY-MM-DD</code> 形式のバリデーションが実施されます。</li><li>国コードのチェックは、 <code>validator</code> を使った <code>check_country_code</code> として実装しています。このように、単一フィールドのバリデーションは <code>validator</code> を使い自由度高く実装できます。</li><li>最低気温と最高気温の関係性といった、複数フィールドにまたがるチェックは <code>root_validator</code> を使って実装可能です。</li></ul><p>ちなみに、このオブジェクトは本来のフィールド名・エイリアスどちらの dict にも戻すことが可能です。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-gray-400 italic\"># 本来のフィールド名をキーとしたdictに変換</span>\n<span class=\"text-code-purple\">print</span><span class=\"text-code-white\">(</span>t<span class=\"text-code-white\">.</span><span class=\"\">dict</span><span class=\"text-code-white\">(</span><span class=\"text-code-white\">)</span><span class=\"text-code-white\">)</span>\n<span class=\"text-gray-400 italic\"># aliasに定義された日本語のフィールド名をキーとしたdictに変換</span>\n<span class=\"text-code-purple\">print</span><span class=\"text-code-white\">(</span>t<span class=\"text-code-white\">.</span><span class=\"\">dict</span><span class=\"text-code-white\">(</span>by_alias<span class=\"\">=</span><span class=\"text-code-red\">True</span><span class=\"text-code-white\">)</span><span class=\"text-code-white\">)</span>\n</code></pre><h1 id=\"appendix\"><a href=\"#appendix\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Appendix</h1><h2 id=\"dataclass-との比較\"><a href=\"#dataclass-%E3%81%A8%E3%81%AE%E6%AF%94%E8%BC%83\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>dataclass との比較</h2><p>データモデルを定義できるという意味においては、Python に組み込みで搭載されている <code>dataclass</code> と似てるようにも感じますので、比較をしてみます。</p><h3 id=\"バリデーション\"><a href=\"#%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>バリデーション</h3><p>dataclass にはバリデーションの機能はありません。\n型を定義できますが、バリデーションが行われるわけではないので、実際には異なる型のデータをセットできてしまいます。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"\">@dataclass</span>\n<span class=\"text-code-purple\">class</span> <span class=\"\">P</span><span class=\"text-code-white\">:</span>\n    i<span class=\"text-code-white\">:</span> <span class=\"\">int</span>\n\n<span class=\"text-gray-400 italic\"># 例外にはならない</span>\nP<span class=\"text-code-white\">(</span>i<span class=\"\">=</span><span class=\"text-code-green\">&quot;hoge&quot;</span><span class=\"text-code-white\">)</span>\n</code></pre><h3 id=\"シリアライズ・デシリアライズ\"><a href=\"#%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BA%E3%83%BB%E3%83%87%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BA\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>シリアライズ・デシリアライズ</h3><p>dataclass は <code>asdict</code> を使うことで、dict への変換はできます。しかし、実際に文字列に変換するにはその dict を <code>json.dumps</code> などしなければいけません。また、<code>datetime</code> 型が入っていた場合、単純な <code>json.dumps</code> では例外となってしまうため、ひと手間必要です。</p><p>一方、pydantic では、<code>.json()</code> や <code>.parse_raw()</code> 関数を使うことで簡単に文字列・オブジェクト間の変換ができます。また、<code>datetime</code> のような型もうまく扱うことができます。</p><h3 id=\"イミュータブル\"><a href=\"#%E3%82%A4%E3%83%9F%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%96%E3%83%AB\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>イミュータブル</h3><p>これはどちらでも実現できます。dataclass では <code>@dataclass(frozen=True)</code> のようにします。\npydantic では、以下のように定義します。</p><pre class=\"language-python\"><code class=\"language-python\"><span class=\"text-code-purple\">class</span> <span class=\"\">PP</span><span class=\"text-code-white\">(</span>BaseModel<span class=\"text-code-white\">)</span><span class=\"text-code-white\">:</span>\n    i<span class=\"text-code-white\">:</span> <span class=\"\">int</span>\n    <span class=\"text-code-purple\">class</span> <span class=\"\">Config</span><span class=\"text-code-white\">:</span>\n        allow_mutation <span class=\"\">=</span> <span class=\"text-code-red\">False</span>\n</code></pre><p>dataclass の場合は hash 化できますが、pydantic の場合はイミュータブルであってもハッシュ化できません。</p><p>全体的に pydantic 寄りな比較をしてしまいましたが、この２つは対比してどちらか一方のみを使うものではないと考えています。\nバリデーションが必要なデータモデルを定義するには pydantic が必要でしょう。そこまで厳密でない便利なデータホルダーを定義するなら dataclass で十分でしょう。</p><h2 id=\"pep-563-の影響\"><a href=\"#pep-563-%E3%81%AE%E5%BD%B1%E9%9F%BF\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>PEP 563 の影響</h2><p>pydantic はアノテーション実行時の型情報を利用しているのですが、3.10 でデフォルトの挙動となる予定だった <a href=\"https://www.python.org/dev/peps/pep-0563/\">PEP563</a> が pydantic の動作に影響を与える、という懸念が出ていまいた。</p><p><a href=\"https://twitter.com/tiangolo/status/1384596307868794882?lang=en\">https://twitter.com/tiangolo/status/1384596307868794882?lang=en</a></p><p><a href=\"https://github.com/samuelcolvin/pydantic/issues/2678\">https://github.com/samuelcolvin/pydantic/issues/2678</a></p><p>結果的には <a href=\"https://mail.python.org/archives/list/python-dev@python.org/thread/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/\">3.10 にはデフォルトとしない決定がなされました。</a></p><p>詳しい内容や経緯は以下リンクにもありますので、そちらもお読みください。</p><p><a href=\"https://dev.to/tiangolo/the-future-of-fastapi-and-pydantic-is-bright-3pbm\">The Future of FastAPI and Pydantic is Bright</a>\n<a href=\"https://methane.hatenablog.jp/entry/2021/04/21/%60from___future___import_annotations%60_%E3%81%8CPython_3.10%E3%81%A7%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%AB%E3%81%AA%E3%82%89%E3%81%AA%E3%81%8F%E3%81%AA%E3%82%8A%E3%81%BE%E3%81%97\"><code>from __future__ import annotations</code> が Python 3.10 でデフォルトにならなくなりました</a></p><hr/><p>以上、pydantic の紹介でした。データを取り回すにはとても便利なライブラリなので重宝しています！</p>","scope":{}},"frontMatter":{"wordCount":554,"readingTime":{"text":"3 min read","minutes":2.76,"time":165600,"words":552},"slug":"pydantic-intro","fileName":"pydantic-intro.mdx","title":"FastAPIを使っていなくても、Pydanticは便利です","date":"2021-09-06","draft":false,"summary":"pydanticの便利な機能の紹介です。","tags":["tech","python","pydantic"]}},"prev":{"title":"GCPで、適当に実行すべきでない3つのコト","date":"2021-07-07","draft":false,"summary":"GCPで、実行前に立ち止まって考えたい3つの事についてまとめました。","tags":["tech","gcp"],"slug":"gcp-three-things"},"next":null},"__N_SSG":true}
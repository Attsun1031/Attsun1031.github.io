<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>data on Attsun blog</title><link>https://attsun1031.github.io/tags/data/</link><description>Recent content in data on Attsun blog</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 10 Feb 2021 10:40:39 +0900</lastBuildDate><atom:link href="https://attsun1031.github.io/tags/data/index.xml" rel="self" type="application/rss+xml"/><item><title>dbtとDataformを比較し、dbtを使うことにした</title><link>https://attsun1031.github.io/posts/dbt-dataform-comparison/</link><pubDate>Wed, 10 Feb 2021 10:40:39 +0900</pubDate><guid>https://attsun1031.github.io/posts/dbt-dataform-comparison/</guid><description>最近、業務でDWH / Datamartの整備やデータ品質の担保を効率的に行いたくなる事情があり、調査したところdbtとDataformがツールとして有力そうだったので、比較してみました。
TL;DR dbtは機能が充実しており、カスタマイズするポイントも多く様々な要件に対応できそうです。反面、理解し使いこなすための学習コストがかかります。 DataformはWebビューによる開発体験が非常に良いです。機能もほとんどはわかりやすく、迷うことも少ないです。一方、dbtに比較して融通はききづらいです。 どちらも十分な機能は備えている素晴らしいツールだと感じるので、どちらが良いかは要求や組織の置かれた状況次第でしょう。 私の所属する会社 (Ubie, inc) では、既存のスケジューラに組み込めることや、機能の充実度・外部との接続性を評価し、dbtを選択しました。 dbt, Dataformについて簡単に紹介 どちらも、ELT (Extract / Load / Transform) におけるT (Transformation) を担当するツールです。</description></item></channel></rss>